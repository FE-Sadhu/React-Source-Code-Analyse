---
source: crates/react_hermes_parser/tests/parser_test.rs
expression: "format!(\"Input:\\n{input}\\n\\nOutput:\\n{output}\")"
input_file: crates/react_hermes_parser/tests/fixtures/error.invalid-pass-ref-to-function.js
---
Input:
function Component(props) {
  const ref = useRef(null);
  const x = foo(ref);
  return x.current;
}


Output:
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Component",
        "typeAnnotation": null,
        "loc": null,
        "range": [
          9,
          18
        ]
      },
      "params": [
        {
          "type": "Identifier",
          "name": "props",
          "typeAnnotation": null,
          "loc": null,
          "range": [
            19,
            24
          ]
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ref",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": [
                    36,
                    39
                  ]
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "useRef",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": [
                      42,
                      48
                    ]
                  },
                  "arguments": [
                    {
                      "type": "NullLiteral",
                      "loc": null,
                      "range": [
                        49,
                        53
                      ]
                    }
                  ],
                  "loc": null,
                  "range": [
                    42,
                    54
                  ]
                },
                "loc": null,
                "range": [
                  36,
                  54
                ]
              }
            ],
            "loc": null,
            "range": [
              30,
              55
            ]
          },
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": null,
                  "loc": null,
                  "range": [
                    64,
                    65
                  ]
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "foo",
                    "typeAnnotation": null,
                    "loc": null,
                    "range": [
                      68,
                      71
                    ]
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "ref",
                      "typeAnnotation": null,
                      "loc": null,
                      "range": [
                        72,
                        75
                      ]
                    }
                  ],
                  "loc": null,
                  "range": [
                    68,
                    76
                  ]
                },
                "loc": null,
                "range": [
                  64,
                  76
                ]
              }
            ],
            "loc": null,
            "range": [
              58,
              77
            ]
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "typeAnnotation": null,
                "loc": null,
                "range": [
                  87,
                  88
                ]
              },
              "property": {
                "type": "Identifier",
                "name": "current",
                "typeAnnotation": null,
                "loc": null,
                "range": [
                  89,
                  96
                ]
              },
              "computed": false,
              "loc": null,
              "range": [
                87,
                96
              ]
            },
            "loc": null,
            "range": [
              80,
              97
            ]
          }
        ],
        "loc": null,
        "range": [
          26,
          99
        ]
      },
      "generator": false,
      "async": false,
      "loc": null,
      "range": [
        0,
        99
      ],
      "loc": null,
      "range": [
        0,
        99
      ]
    }
  ],
  "sourceType": "script",
  "loc": null,
  "range": [
    0,
    99
  ]
}
